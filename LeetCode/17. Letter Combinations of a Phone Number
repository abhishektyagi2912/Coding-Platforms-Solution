class Solution {
    void phoneNum(string digits, string output, int index, string map[], vector<string>& ans){
        //base case
        if(index>=digits.length()){
            ans.push_back(output);
            return;
        }
        int num = digits[index]-'0';  // change string to number
        //ab is num ko compare krna h map s 
        string val = map[num];
        for(int i=0;i<val.length();i++){
            output.push_back(val[i]);
            phoneNum(digits, output, index+1, map, ans );
            // ab back jayenge to pop krdo ouput to empty space for val
            output.pop_back();
        }
    }
public:
    vector<string> letterCombinations(string digits) {
        vector<string> ans;
        if(digits.length()==0) return ans;

        string output = "";
        string map[10] = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        int index=0;

        phoneNum(digits, output, index, map, ans );
        return ans;
    }
};
