class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>result;
        int firstindex=firstelement(nums,target);
        int lastindex=lastelement(nums,target);
        result.push_back(firstindex);
        result.push_back(lastindex);
        return result;
    }
        
        int firstelement(vector<int>& nums, int target){
            int s=0;
            int l=nums.size()-1;
            int pos=-1;
            while(s<=l){
                int mid = s+(l-s)/2;
                if(nums[mid]==target){
                    pos=mid;
                    l=mid-1;
                }
                else if(nums[mid]>target) l=mid-1;
                else s=mid+1;
                
            }
            return pos;
        }
        int lastelement(vector<int>& nums, int target){
            int s=0;
            int l=nums.size()-1;
            int pos=-1;
            while(s<=l){
                int mid = s+(l-s)/2;
                if(nums[mid]==target){
                    pos=mid;
                    s=mid+1;
                }
                else if(nums[mid]>target) l=mid-1;
                else s=mid+1;
                
            }
            return pos;
        }
        
};
